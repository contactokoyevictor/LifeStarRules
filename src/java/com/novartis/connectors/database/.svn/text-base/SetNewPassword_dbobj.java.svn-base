package com.novartis.connectors.database;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.sql.DataSource;
/**
 * @author Okoye Victor Gift
 */
public class SetNewPassword_dbobj {

	private String password = "";
	private String new_password ="";
	private String elementstatus="";
	private String elementstatusmessage="";
	private int consumer_id;
	private ResultSet keyResultSet;
	private int insert;
	private String Result = "";
	private int newKey;

	private Connection conn = null;
	private String ERRORorWARNING = "";

	public String getPassword() {
		return password;
	}
	public void setPassword(String password) {
		this.password = password;
	}
	public String getNew_password() {
		return new_password;
	}
	public void setNew_password(String new_password) {
		this.new_password = new_password;
	}
	public String getElementstatus() {
		return elementstatus;
	}
	public void setElementstatus(String elementstatus) {
		this.elementstatus = elementstatus;
	}
	public String getElementstatusmessage() {
		return elementstatusmessage;
	}
	public void setElementstatusmessage(String elementstatusmessage) {
		this.elementstatusmessage = elementstatusmessage;
	}
	public int getConsumer_id() {
		return consumer_id;
	}
	public void setConsumer_id(int consumer_id) {
		this.consumer_id = consumer_id;
	}
	public ResultSet getKeyResultSet() {
		return keyResultSet;
	}
	public void setKeyResultSet(ResultSet keyResultSet) {
		this.keyResultSet = keyResultSet;
	}
	public int getInsert() {
		return insert;
	}
	public void setInsert(int insert) {
		this.insert = insert;
	}
	public String getResult() {
		return Result;
	}
	public void setResult(String result) {
		Result = result;
	}
	public int getNewKey() {
		return newKey;
	}
	public void setNewKey(int newKey) {
		this.newKey = newKey;
	}
	public String getERRORorWARNING() {
		return ERRORorWARNING;
	}
	public void setERRORorWARNING(String eRRORorWARNING) {
		ERRORorWARNING = eRRORorWARNING;
	}

	public String getMessages(){
		   return ERRORorWARNING;
	}
	public void makeDBConnection() throws Exception{
		try{
		    Context ctx = new InitialContext();
		    DataSource ds = (DataSource)ctx.lookup("java:/jdbc/novartis");
		    conn = ds.getConnection();
		   }catch(Exception e) {
		        System.out.println("SQL Exception is caught during connection creation."+e);
		        ERRORorWARNING = e.getMessage().toString();
		        conn.close();
		     }
		}

	public void setNewPassword(int consumer_id, String password, String new_password)throws Exception
	{
		PreparedStatement stat = null;
		try {
		      makeDBConnection();
		      stat = conn.prepareStatement("UPDATE `novartis`.`user` SET password = ? WHERE id = ? AND password =?");
		      stat.setString(1, new_password);
		      stat.setInt(2, consumer_id);
		      stat.setString(3, password);
		      setInsert(stat.executeUpdate());
		      if (getInsert() > 0) {
		    	  setConsumer_id(consumer_id);
		    	  setElementstatus("OK");
		    	  setElementstatusmessage("Cunsumer Password Change was seccessful..");
	    		  stat.close();
		      }

		      else if(getInsert() <= 0){
		    	  setConsumer_id(consumer_id);
		    	  setElementstatus("FAIL");
		    	  setElementstatusmessage("Cunsumer Password Change was unseccessful..");
	    		  stat.close();
		      }
		      else if(getInsert() <= 0 && getMessages().length() > 1){
		    	  setConsumer_id(consumer_id);
		    	  setElementstatus("ERROR");
		    	  setElementstatusmessage(getMessages());
	    		  stat.close();
		      }
		      else{
		    	  setConsumer_id(consumer_id);
		    	  setElementstatus("ERROR");
		    	  setElementstatusmessage(getMessages());
	    		  stat.close();

		      }
		        conn.close();
		        stat.close();
		    } catch (Exception e) {
		    	ERRORorWARNING = e.getMessage();
		    	conn.close();
		    } finally {
		      try {
		    	   conn.close();
		      } catch (SQLException e) {
		    	  ERRORorWARNING = e.getMessage();
		    	   conn.close();
		      }
		    }
	}
}
